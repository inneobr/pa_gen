default:
  image: sa-saopaulo-1.ocir.io/grj9gtpq5dke/maven-jdk19:3.8.7
  
stages:
  - build
  - test
  - publish
  - deploy

build-mvn:
  stage: build
  script:
    - echo "iniciando Build com mvn clean install"
    - mvn clean install --settings settings.xml
  artifacts:
    name: "$CI_JOB_NAME"
    when: on_success
    paths:
    - target/genesis-0.0.1-SNAPSHOT.jar
    expire_in: 1 day
  only:
    - master
    - staging
    - development

publish-image:
  stage: publish
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: ['']
  script:
    - echo "Publicando a imagem no Container Registry"
    - cat $DOCKER_AUTH_CONFIG > /kaniko/.docker/config.json
    - /kaniko/executor
      --context "."
      --dockerfile "Dockerfile"
      --destination "sa-saopaulo-1.ocir.io/grj9gtpq5dke/genesis-api:${CI_COMMIT_BRANCH}-${CI_PIPELINE_ID}"
  only:
    - master
    - staging
    - development

deploy-development:
  stage: deploy
  image:
#    name: bitnami/kubectl:latest
    name: sa-saopaulo-1.ocir.io/grj9gtpq5dke/kubernetes-deploy:v1
    entrypoint: ['']
  script:
    - echo "Realizando o deploy no K8s cluster em Development"
    - kubectl config use-context integrada/k8s-agent:integrada
    - envsubst < k8s/development/deployment.yaml > deployment-replace.yaml
    - kubectl apply -f deployment-replace.yaml --insecure-skip-tls-verify
    - kubectl apply -f k8s/development/service.yaml --insecure-skip-tls-verify
    - kubectl apply -f k8s/development/ingress.yaml --insecure-skip-tls-verify
    - kubectl apply -f k8s/development/configmap.yaml --insecure-skip-tls-verify
  environment:
    name: Development
  only:
    - development

deploy-staging:
  stage: deploy
  image:
#    name: bitnami/kubectl:latest
    name: sa-saopaulo-1.ocir.io/grj9gtpq5dke/kubernetes-deploy:v1
    entrypoint: ['']
  script:
    - echo "Realizando o deploy no K8s cluster em Staging"
    - kubectl config use-context integrada/k8s-agent:integrada
    - envsubst < k8s/staging/deployment.yaml > deployment-replace.yaml
    - kubectl apply -f deployment-replace.yaml --insecure-skip-tls-verify
    - kubectl apply -f k8s/staging/service.yaml --insecure-skip-tls-verify
    - kubectl apply -f k8s/staging/ingress.yaml --insecure-skip-tls-verify
    - kubectl apply -f k8s/staging/configmap.yaml --insecure-skip-tls-verify
  environment:
    name: Staging
  only:
    - staging

deploy-production:
  stage: deploy
  image:
#    name: bitnami/kubectl:latest
    name: sa-saopaulo-1.ocir.io/grj9gtpq5dke/kubernetes-deploy:v1
    entrypoint: ['']
  script:
    - echo "Realizando o deploy no K8s cluster em Production"
    - kubectl config use-context integrada/k8s-agent:integrada
    - envsubst < k8s/production/deployment.yaml > deployment-replace.yaml
    - kubectl apply -f deployment-replace.yaml --insecure-skip-tls-verify
    - kubectl apply -f k8s/production/service.yaml --insecure-skip-tls-verify
    - kubectl apply -f k8s/production/ingress.yaml --insecure-skip-tls-verify
    - kubectl apply -f k8s/production/configmap.yaml --insecure-skip-tls-verify
  environment:
    name: Production
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      when: manual

include:
  - template: Security/SAST.gitlab-ci.yml
    only:
      - staging
    artifacts:
      name: "$CI_JOB_NAME"
      when: on_success
      paths:
      - /*
      expire_in: 1 day
      



